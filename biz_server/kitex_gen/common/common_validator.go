// Code generated by Validator v0.2.3. DO NOT EDIT.

package common

import (
	"bytes"
	"fmt"
	"reflect"
	"regexp"
	"strings"
	"time"
)

// unused protection
var (
	_ = fmt.Formatter(nil)
	_ = (*bytes.Buffer)(nil)
	_ = (*strings.Builder)(nil)
	_ = reflect.Type(nil)
	_ = (*regexp.Regexp)(nil)
	_ = time.Nanosecond
)

func (p *EmptyResponse) IsValid() error {
	return nil
}
func (p *Page) IsValid() error {
	if p.PageNo <= int32(1) {
		return fmt.Errorf("field PageNo gt rule failed, current value: %v", p.PageNo)
	}
	if p.PageSize <= int32(1) {
		return fmt.Errorf("field PageSize gt rule failed, current value: %v", p.PageSize)
	}
	if p.PageSize >= int32(100) {
		return fmt.Errorf("field PageSize lt rule failed, current value: %v", p.PageSize)
	}
	return nil
}
